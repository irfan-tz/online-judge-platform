# Generated by Django 5.2 on 2025-07-09 10:02

from django.db import migrations, models


def convert_limits_to_integers(apps, schema_editor):
    """
    Convert existing string time_limit and memory_limit values to integers.
    Assumes time_limit is in format like "1000ms" or "1s" and converts to milliseconds.
    Assumes memory_limit is in format like "256MB" or "1GB" and converts to MB.
    """
    Problem = apps.get_model('onlineJudge', 'Problem')
    
    for problem in Problem.objects.all():
        # Convert time_limit
        if problem.time_limit:
            time_str = problem.time_limit.strip().lower()
            if time_str.endswith('ms'):
                time_value = int(time_str[:-2])
            elif time_str.endswith('s'):
                time_value = int(time_str[:-1]) * 1000
            else:
                # Try to parse as integer (already in ms)
                try:
                    time_value = int(time_str)
                except ValueError:
                    time_value = 1000  # Default to 1 second
            problem.time_limit = time_value
        
        # Convert memory_limit
        if problem.memory_limit:
            memory_str = problem.memory_limit.strip().lower()
            if memory_str.endswith('mb'):
                memory_value = int(memory_str[:-2])
            elif memory_str.endswith('gb'):
                memory_value = int(memory_str[:-2]) * 1024
            elif memory_str.endswith('kb'):
                memory_value = int(memory_str[:-2]) // 1024
            else:
                # Try to parse as integer (already in MB)
                try:
                    memory_value = int(memory_str)
                except ValueError:
                    memory_value = 256  # Default to 256 MB
            problem.memory_limit = memory_value
        
        problem.save()


def reverse_convert_limits_to_strings(apps, schema_editor):
    """
    Convert integer values back to string format for rollback.
    """
    Problem = apps.get_model('onlineJudge', 'Problem')
    
    for problem in Problem.objects.all():
        # Convert time_limit back to string
        if problem.time_limit:
            problem.time_limit = f"{problem.time_limit}ms"
        
        # Convert memory_limit back to string
        if problem.memory_limit:
            problem.memory_limit = f"{problem.memory_limit}MB"
        
        problem.save()


class Migration(migrations.Migration):

    dependencies = [
        ('onlineJudge', '0005_alter_problem_options_problem_constraints_and_more'),
    ]

    operations = [
        # First, convert existing data
        migrations.RunPython(
            convert_limits_to_integers,
            reverse_convert_limits_to_strings,
        ),
        # Then, change the field types
        migrations.AlterField(
            model_name='problem',
            name='memory_limit',
            field=models.IntegerField(help_text='Memory limit in MB'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='time_limit',
            field=models.IntegerField(help_text='Time limit in milliseconds'),
        ),
    ]